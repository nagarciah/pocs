<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="hello, nagarciah.spring.rest.test.service" />
	
	<!-- Para buscar servicios REST que no sean repositorios Spring DATA/JPA (TambiÃ©n requerido para evitar error HTTP 406) -->
	<mvc:annotation-driven />
	
	<!-- Para buscar repositorios Spring DATA/JPA -->
	<jpa:repositories base-package="hello" />
	
	<!-- Data Access con JPA + Hibernate + Spring -->
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
     
 	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:config/persistence-demo.xml" />
        <property name="persistenceUnitName" value="demoRestPersistence" />        
        <property name="dataSource" ref="restDemoDS" />
        <property name="packagesToScan" value="hello.*" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- 
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.DerbyDialect" />
                -->
            </bean>
        </property>
		<property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- 
	<bean id="restDemoDS" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
	    <property name="jndiName" value="java:comp/env/jdbc/restDemoDB" />
	    <property name="resourceRef" value="true" />        
	</bean>
	-->
	
 	<bean id="restDemoDS" class="com.mchange.v2.c3p0.ComboPooledDataSource" scope="singleton" destroy-method="close">
		<property name="driverClass" value="org.apache.derby.jdbc.ClientDriver" />
		<property name="jdbcUrl" value="jdbc:derby://localhost:6666/my_batch_test_db;create=true" />
		
		<property name="user" value="laliga" />
		<property name="password" value="laliga" />
		<property name="acquireIncrement" value="10" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="maxPoolSize" value="100" />
		<property name="maxStatements" value="50" />
		<property name="minPoolSize" value="10" />
	</bean>
	
</beans>
