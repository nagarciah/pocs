# Esta es una forma de hacerlo: un archivo ValidationMessages.properties
# en la raíz del classpath y poner el mensaje en la anotacion
# de validación, por ejemplo, @NotNull(message="{firstname.isnull}")
age.isnull=No, no y no, no es una falla de Boot, es que la edad no puede ser nula

# La ventaja de este archivo sobre messages.properties, es que aqui se puede hacer 
# interpolación de variables predefinidas ({min}, {max}, ${validatedValue}, etc)
# pero en messages.properties, no (debe hacer se directamente en la anotacion)
age.tooYoung=Debe tener más de {value} años pero usted ingresó ${validatedValue}
invalidMessageSize=El mensaje debe tener entre {min} y {max} caracteres pero usted ingresó "${validatedValue}"

# Para establecer un mensaje genérico global, se puede usar cualquiera de los dos
# archivos (messages.properties o ValidationMessages.properties), la diferencia es que messages.properties no 
# permite interpolación de variables. 
# Si se usa ValidationMessages.properties,
# se debe indicar el nombre calificado de la anotación como clave por ejemplo, para la anotación 
# javax.validation.constraints.Max, la clave/mensaje sería:
javax.validation.constraints.Max.message=El valor ${validatedValue} es mayor que el permitido {value} (desde ValidationMessages.properties)