# IMPORTANTE: Si se define un mensaje en messages.properties y otro en
# ValidationMessages.Properties, para el mismo atributo, los de este
# archivo tienen prioridad

# IMPORTANTE: En este archivo no se puede hacer interpolación de variables 
# predefinidas ({min}, {max}, ${validatedValue}, etc)

# Esta es otra una forma de hacerlo: un archivo messages.properties
# en la raíz del classpath. En este caso no es necesario poner la
# referencia al mensaje en la anotacion, sino que basta con seguir 
# un patron en el nombre de la clave del mensaje, así:
# Anotación.clase.atributo, por ejemplo, para la clase y atributo
# PersonForm.name con anotación @Size(min=2, max=30), el mensaje es:
Size.personForm.name=Entre mas grande, mejor

# Para establecer un mensaje genérico global, se puede usar cualquiera de los dos
# archivos (messages.properties o ValidationMessages.properties), la diferencia es que messages.properties no 
# permite interpolación de variables. 
# Si se usa messages.properties,
# se debe indicar sólo el nombre de la anotación como clave por ejemplo, para la anotación 
# javax.validation.constraints.Max, la clave/mensaje sería:
#Max=El valor es muy grande (desde messages.properties)

# Aqui se pueden poner nombres de mensajes personalizados y la clave debe
# usarse en el parametro message de la anotación, por ejemplo:
# custom.nullMessage = No puede ser nulo     (messages.properties)
# @NotNull(message="{custom.nullMessage}")   (en la clase)